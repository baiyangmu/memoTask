<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baiyangmu.memotask.dao.MemoLinkDao">

    <resultMap type="com.baiyangmu.memotask.entity.MemoLink" id="MemoLinkMap">
        <result property="linkId" column="link_id" jdbcType="INTEGER"/>
        <result property="sourceMemoId" column="source_memo_id" jdbcType="INTEGER"/>
        <result property="targetMemoId" column="target_memo_id" jdbcType="INTEGER"/>
        <result property="createdBy" column="created_by" jdbcType="INTEGER"/>
        <result property="creationDate" column="creation_date" jdbcType="TIMESTAMP"/>
        <result property="lastUpdatedBy" column="last_updated_by" jdbcType="INTEGER"/>
        <result property="lastUpdateDate" column="last_update_date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MemoLinkMap">
        select
          link_id, source_memo_id, target_memo_id, created_by, creation_date, last_updated_by, last_update_date
        from memo_link
        where link_id = #{linkId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MemoLinkMap">
        select
          link_id, source_memo_id, target_memo_id, created_by, creation_date, last_updated_by, last_update_date
        from memo_link
        <where>
            <if test="linkId != null">
                and link_id = #{linkId}
            </if>
            <if test="sourceMemoId != null">
                and source_memo_id = #{sourceMemoId}
            </if>
            <if test="targetMemoId != null">
                and target_memo_id = #{targetMemoId}
            </if>
            <if test="createdBy != null">
                and created_by = #{createdBy}
            </if>
            <if test="creationDate != null">
                and creation_date = #{creationDate}
            </if>
            <if test="lastUpdatedBy != null">
                and last_updated_by = #{lastUpdatedBy}
            </if>
            <if test="lastUpdateDate != null">
                and last_update_date = #{lastUpdateDate}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from memo_link
        <where>
            <if test="linkId != null">
                and link_id = #{linkId}
            </if>
            <if test="sourceMemoId != null">
                and source_memo_id = #{sourceMemoId}
            </if>
            <if test="targetMemoId != null">
                and target_memo_id = #{targetMemoId}
            </if>
            <if test="createdBy != null">
                and created_by = #{createdBy}
            </if>
            <if test="creationDate != null">
                and creation_date = #{creationDate}
            </if>
            <if test="lastUpdatedBy != null">
                and last_updated_by = #{lastUpdatedBy}
            </if>
            <if test="lastUpdateDate != null">
                and last_update_date = #{lastUpdateDate}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="linkId" useGeneratedKeys="true">
        insert into memo_link(source_memo_id, target_memo_id, created_by, creation_date, last_updated_by, last_update_date)
        values (#{sourceMemoId}, #{targetMemoId}, #{createdBy}, #{creationDate}, #{lastUpdatedBy}, #{lastUpdateDate})
    </insert>

    <insert id="insertBatch" keyProperty="linkId" useGeneratedKeys="true">
        insert into memo_link(source_memo_id, target_memo_id, created_by, creation_date, last_updated_by, last_update_date)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.sourceMemoId}, #{entity.targetMemoId}, #{entity.createdBy}, #{entity.creationDate}, #{entity.lastUpdatedBy}, #{entity.lastUpdateDate})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="linkId" useGeneratedKeys="true">
        insert into memo_link(source_memo_id, target_memo_id, created_by, creation_date, last_updated_by, last_update_date)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.sourceMemoId}, #{entity.targetMemoId}, #{entity.createdBy}, #{entity.creationDate}, #{entity.lastUpdatedBy}, #{entity.lastUpdateDate})
        </foreach>
        on duplicate key update
        source_memo_id = values(source_memo_id),
        target_memo_id = values(target_memo_id),
        created_by = values(created_by),
        creation_date = values(creation_date),
        last_updated_by = values(last_updated_by),
        last_update_date = values(last_update_date)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update memo_link
        <set>
            <if test="sourceMemoId != null">
                source_memo_id = #{sourceMemoId},
            </if>
            <if test="targetMemoId != null">
                target_memo_id = #{targetMemoId},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy},
            </if>
            <if test="creationDate != null">
                creation_date = #{creationDate},
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by = #{lastUpdatedBy},
            </if>
            <if test="lastUpdateDate != null">
                last_update_date = #{lastUpdateDate},
            </if>
        </set>
        where link_id = #{linkId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from memo_link where link_id = #{linkId}
    </delete>

</mapper>

