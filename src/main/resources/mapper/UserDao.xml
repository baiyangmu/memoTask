<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baiyangmu.memotask.dao.UserDao">

    <resultMap type="com.baiyangmu.memotask.entity.User" id="UserMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="createdBy" column="created_by" jdbcType="INTEGER"/>
        <result property="creationDate" column="creation_date" jdbcType="TIMESTAMP"/>
        <result property="lastUpdatedBy" column="last_updated_by" jdbcType="INTEGER"/>
        <result property="lastUpdateDate" column="last_update_date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          user_id, username, email, password, created_by, creation_date, last_updated_by, last_update_date
        from user
        where user_id = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          user_id, username, email, password, created_by, creation_date, last_updated_by, last_update_date
        from user
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="createdBy != null">
                and created_by = #{createdBy}
            </if>
            <if test="creationDate != null">
                and creation_date = #{creationDate}
            </if>
            <if test="lastUpdatedBy != null">
                and last_updated_by = #{lastUpdatedBy}
            </if>
            <if test="lastUpdateDate != null">
                and last_update_date = #{lastUpdateDate}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
    </select>

    <select id="findByEmail" resultMap="UserMap">
        select  user_id, username, email, password, salt , created_by, creation_date, last_updated_by, last_update_date
        from user
        where email = #{email}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into user(username, email, password, salt, created_by, creation_date, last_updated_by, last_update_date)
        values (#{username}, #{email}, #{password}, #{salt} , #{createdBy}, #{creationDate}, #{lastUpdatedBy}, #{lastUpdateDate})
    </insert>

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into user(username, email, password, created_by, creation_date, last_updated_by, last_update_date)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.username}, #{entity.email}, #{entity.password}, #{entity.createdBy}, #{entity.creationDate}, #{entity.lastUpdatedBy}, #{entity.lastUpdateDate})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into user(username, email, password, created_by, creation_date, last_updated_by, last_update_date)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.email}, #{entity.password}, #{entity.createdBy}, #{entity.creationDate}, #{entity.lastUpdatedBy}, #{entity.lastUpdateDate})
        </foreach>
        on duplicate key update
        username = values(username),
        email = values(email),
        password = values(password),
        created_by = values(created_by),
        creation_date = values(creation_date),
        last_updated_by = values(last_updated_by),
        last_update_date = values(last_update_date)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy},
            </if>
            <if test="creationDate != null">
                creation_date = #{creationDate},
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by = #{lastUpdatedBy},
            </if>
            <if test="lastUpdateDate != null">
                last_update_date = #{lastUpdateDate},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user where user_id = #{userId}
    </delete>

</mapper>

